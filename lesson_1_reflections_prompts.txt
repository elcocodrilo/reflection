How did viewing a diff between two versions of a file help you see the bug that was introduced?

it showed the lines where there was a change, if you know that the bug does not exist in the
old file that means the bug must be a result of something different which appears in the new
file in the lines specified by the diff command.


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

It could help you organise your file system more simply, and how your program has evolved


What do you think are the pros and cons of manually choosing when to create a commit,
like you do in Git, vs having versions automatically saved, like Google Docs does?

pros: can chose when they are to be more useful, can do more or less often depending on progress,
can have a better history
cons: if you forget to commit you have no history


Why do you think some version control systems, like Git, allow saving multiple files in one commit,
while others, like Google Docs, treat each file separately?

Because software projects are often compiled of many files working together, where
docs are usually just one file.


How might using version control make you more confident to make changes that could break something?

Because you know that you can always revert to previous versions you do not have to worry at all about
breaking things. You can be much more confident in making a change. Version control allows trying to
make big changes without worrying about not being able to get back to where you were


Now that you have your workspace set up, what do you want to try using Git for?

to make changes to sql queries and not have to worry about losing old versions of the code



fa4c6bade4970c282b3870ad16f1bde8164663a9 - original
003c8c197cd3b1e5b28b58f53ee14d7ebaa9bb3a - works
